import os

all_datadir = "/data/single-gene_alignments"
datadir = "/data/single-gene_alignments/XiD4"
outputdir = "/data/results"
tools = ["fasttree","iqtree"]
single = True

def get_output_files(tools):
    list_files = []
    for root, dirs, files in os.walk(all_datadir):
        for tool in tools:
            directory = outputdir +"/"+tool
            if not os.path.exists(directory):
                os.makedirs(directory)
    for root, dirs, files in os.walk(datadir):
        if root != datadir or single:
            for filename in files:
                for method in tools:
                    file_name, ext = os.path.splitext(filename)
                    output_file = filename
                    output_path = root.replace(all_datadir+"/", "")
                    list_files.append(method+"/"+filename.split(".")[0]+".txt")
                    #list_files.append(os.path.join(output_path,output_file))
    return list_files

# List of output files
OUTPUT_FILES = get_output_files(tools)

rule all:
     input:
         expand("{datadir}/{sample}", sample=OUTPUT_FILES, datadir=outputdir)
     run: os.system('sh get_data.sh')

rule comp:
    input:
        t1="/data/results/{method}/{sample}.nhx",
        best="/data/single-gene_trees/XiD4/Best_observed/{sample}.best.tre"
    output: "/data/results/{method}/{sample}.txt"
    threads: 1
    singularity:
        "docker://evolbioinfo/gotree:v0.2.10"
    shell:
        "gotree compare trees --binary -i {input.t1} -c {input.best} | tail -n +2 > {output}"


rule fasttree:
    input: "/data/single-gene_alignments/XiD4/{sample}.nt.aln"
    output: "/data/results/fasttree/{sample}.nhx"
    threads: 1
    singularity:
        "docker://evolbioinfo/fasttree:v2.1.9"
    shell:
        "FastTree -nt -gtr -gamma -spr 4 -mlacc 2 -slownni {input} > {output}"


rule iqtree:
    input: "/data/single-gene_alignments/XiD4/{sample}.nt.aln"
    output: "/data/results/iqtree/{sample}.nhx"
    threads: 1
    singularity:
        "docker://evolbioinfo/iqtree:v1.4.2"
    shell:
        "iqtree -m GTR+G4 -s {input} -seed 1 -nt 1;"
	    "mv {input}.treefile {output}"

rule phyml:
    input: "/data/single-gene_alignments/XiD4/{sample}.nt.aln.phy"
    output: "/data/results/phyml/{sample}.nhx"
    threads: 1
    singularity:
        "docker://evolbioinfo/phyml:v3.3.20180129"
    shell:
        "phyml -i {input} --r_seed 1 -d nt -b 0 -m GTR -f e -c 4 -a e -s SPR --n_rand_starts 1 -o tlr -p --run_id ID;"
        "mv {input}_phyml_tree_ID.txt {output}"

rule fasta2phylip:
    input: "/data/single-gene_alignments/XiD4/{sample}.nt.aln"
    output: "/data/single-gene_alignments/XiD4/{sample}.nt.aln.phy"
    threads: 1
    singularity:
        "docker://evolbioinfo/goalign:v0.2.9"
    shell:
        "goalign reformat phylip -i {input} -o {output}"

rule raxml:
    input: "/data/single-gene_alignments/XiD4/{sample}.nt.aln"
    output: "/data/results/raxml/{sample}.nhx"
    threads: 1
    singularity:
        "docker://evolbioinfo/raxml:v8.2.0-avx2"
    shell:
        "raxmlHPC -T 1 -p 1 -m GTRGAMMA --no-bfgs -s {input} -n NAME;"
	    "mv RAxML_bestTree.NAME {output}"